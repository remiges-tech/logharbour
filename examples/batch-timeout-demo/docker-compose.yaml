version: '2'

networks:
  lhnet:
    driver: bridge

services:
  elasticsearch:
    image: 'bitnami/elasticsearch:latest'
    networks:
      - lhnet
    ports:
      - "9200:9200"

  kafka:
    image: 'bitnami/kafka:latest'
    networks:
      - lhnet
    ports:
      - '9092:9092'
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_AUTO_CREATE_TOPICS_ENABLE=true

  lhconsumer:
    image: 'lhconsumer:latest'
    networks:
      - lhnet
    command: ["sh", "-c", "sleep 20 && ./lh-consumer"]
    environment:
      ELASTICSEARCH_ADDRESSES: "http://elasticsearch:9200"
      KAFKA_BROKERS: "kafka:9092"
      KAFKA_TOPIC: "log_topic"
      KAFKA_OFFSET_TYPE: "earliest"
      # Test configuration for timeout demonstration
      KAFKA_BATCH_SIZE: "100"           # High batch size so timeout triggers first
      KAFKA_BATCH_TIMEOUT: "10s"        # Short timeout for easy observation
      LOG_LEVEL: "debug"                # Debug level to see timeout messages
      # Consumer group settings
      KAFKA_CONSUMER_GROUP: "demo-group"
      USE_CONSUMER_GROUP: "true"
    depends_on:
      - kafka
      - elasticsearch
      
  # Test producer that runs inside the network
  test-producer:
    image: 'golang:1.21'
    networks:
      - lhnet
    volumes:
      - ../..:/app
    working_dir: /app
    command: ["sh", "-c", "sleep 30 && go run examples/batch-timeout-demo/producer.go"]
    environment:
      KAFKA_BROKERS: "kafka:9092"
      KAFKA_TOPIC: "log_topic"
    depends_on:
      - kafka